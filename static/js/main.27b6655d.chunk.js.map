{"version":3,"sources":["app.js","components/spinner.js","local-storage/local-storage.js","components/show.js","books-api/books-api.js","components/search.js","components/about.js","components/show-cart.js","routes.js","report-web-vitals.js","index.js"],"names":["App","props","useState","search_input","setSearchInput","Container","style","className","Form","action","id","placeholder","type","onChange","e","target","value","Button","href","variant","size","cursor","Spin","Spinner","position","top","left","animation","card_items","val","localStorage","total_items","document","getElementById","textContent","cart","book_data","add_book","title","volumeInfo","author","authors","price","saleInfo","listPrice","amount","currencyCode","image","imageLinks","thumbnail","books","JSON","parse","books_count","parseInt","stringify","Show","map","book","Card","display","bg","Img","src","alt","width","height","Body","Title","onClick","getBooksData","search","a","replace","fetch","mode","response","json","keys","Object","filter","key","totalItems","length","items","Search","match","books_data","setBooksData","isFetched","setIsFetched","useEffect","params","updateData","temp","textAlign","marginTop","About","Jumbotron","rel","color","TotalPrice","setPrice","reduce","b","Alert","ShowCart","setBooks","setBooksCount","preventDefault","temp_books","temp_books_count","updateCart","qty","Row","Col","Image","onSubmit","min","required","Routes","Navbar","collapseOnSelect","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Divider","basename","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"wWAiCeA,MA5Bf,SAAaC,GAAQ,IAAD,EACmBC,mBAAS,IAD5B,mBACbC,EADa,KACCC,EADD,KAMlB,OACE,cAACC,EAAA,EAAD,CAAWC,MAAOL,EAAMK,MAAOC,UAAU,SAAzC,SACE,eAACC,EAAA,EAAD,CAAMC,OAAQN,EAAd,UACE,uBACEO,GAAG,SACHC,YAAY,uBACZC,KAAK,OACLC,SAXS,SAACC,GAChBV,EAAe,iBAAD,OAAkBU,EAAEC,OAAOC,WAYrC,cAACC,EAAA,EAAD,CACEC,KAAMf,EACNS,KAAK,SACLO,QAAQ,eACRC,KAAK,KAJP,SAME,cAAC,IAAD,CAAiBA,KAAM,GAAIC,OAAO,oB,iCChB7BC,EARF,kBACX,cAACC,EAAA,EAAD,CACEjB,MAAO,CAAEkB,SAAU,QAASC,IAAK,MAAOC,KAAM,OAC9CC,UAAU,SACVR,QAAQ,U,QCqBNS,EAAa,SAACC,GAClBC,aAAaC,YAAcF,EAC3BG,SAASC,eAAe,cAAcC,YAAcL,GAEvCM,EA/BF,SAACC,GACZ,IAAIC,EAAW,GAEfA,EAAS3B,GAAK0B,EAAU1B,GACxB2B,EAASC,MAAQF,EAAUG,WAAWD,MACtCD,EAASG,OAASJ,EAAUG,WAAWE,QAAQ,GAC/CJ,EAASK,MACPN,EAAUO,SAASC,UAAUC,OAC7BT,EAAUO,SAASC,UAAUE,aAC/BT,EAASU,MAAQX,EAAUG,WAAWS,WAAWC,UAEjD,IAAIC,EAAQC,KAAKC,MAAMtB,aAAaoB,OAChCG,EAAcF,KAAKC,MAAMtB,aAAauB,aAEtCA,EAAYhB,EAAS3B,IACvB2C,EAAYhB,EAAS3B,IAAM4C,SAASD,EAAYhB,EAAS3B,KAAO,GAEhE2C,EAAYhB,EAAS3B,IAAM,EAC3BwC,EAAMb,EAAS3B,IAAM2B,GAGvBP,aAAaoB,MAAQC,KAAKI,UAAUL,GACpCpB,aAAauB,YAAcF,KAAKI,UAAUF,GAE1CzB,EAAW0B,SAASxB,aAAaC,aAAe,IC2BnCyB,G,MA/CF,SAACvD,GAAW,IACjBiD,EAAUjD,EAAViD,MAMN,OACE,cAAC7C,EAAA,EAAD,CAAWE,UAAU,iBAArB,SACG2C,EAAMO,KAAI,SAACC,GAAD,OACT,eAACC,EAAA,EAAD,CACEpD,UAAU,YACVD,MAAO,CAAEsD,QAAS,gBAElBC,GAAG,QAJL,UAME,cAACF,EAAA,EAAKG,IAAN,CACE3C,QAAQ,MACR4C,IAAKL,EAAKnB,WAAWS,WAAWC,UAChCe,IAAI,sBACJC,MAAM,MACNC,OAAO,QAET,eAACP,EAAA,EAAKQ,KAAN,WACE,eAACR,EAAA,EAAKS,MAAN,CAAY7D,UAAU,aAAtB,kBACQ,IACLmD,EAAKf,SAASC,UAAYc,EAAKf,SAASC,UAAUC,OAAS,EAAG,IAC9Da,EAAKf,SAASC,UACXc,EAAKf,SAASC,UAAUE,aACxB,SAEN,cAAC7B,EAAA,EAAD,CACEoD,QACEX,EAAKf,SAASC,UAAY,kBA9BxB,SAACc,GACfvB,EAAKuB,GA6BuCW,CAAQX,IAAQ,kBAAM,MAExDvC,QAAQ,OACRC,KAAK,KALP,8BAlBGsC,EAAKhD,WCAL4D,EAjBG,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACnBD,EAASA,EAAOE,QAAQ,KAAM,KADX,SAEEC,MAAM,iDAAD,OACyBH,EADzB,qCAExB,CAAEI,KAAM,SAJS,cAEfC,EAFe,gBAMFA,EAASC,OANP,cAMnBD,EANmB,OASnBE,GADIA,EAAOC,OAAOD,KAAKF,EAAQ,QACnBI,QAAO,SAACC,GAAD,OAASL,EAAQ,MAAUK,GAAK1C,WAAWS,cAC9D4B,EAAW,CACTM,WAAYJ,EAAKK,OACjBC,MAAON,EAAKrB,KAAI,SAACwB,GAAD,OAASL,EAAQ,MAAUK,OAZ1B,kBAcZL,GAdY,4CAAH,sDCwCHS,EAjCA,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACKpF,mBAAS,IADd,mBACvBqF,EADuB,KACXC,EADW,OAEItF,oBAAS,GAFb,mBAEvBuF,EAFuB,KAEZC,EAFY,KAI5BC,qBAAU,YACQ,uCAAG,4BAAAnB,EAAA,sEACMF,EAAagB,EAAMM,OAAOlF,IADhC,cACb6E,EADa,gBAEXC,EAAaD,GAFF,OAGjBG,GAAa,GAHI,2CAAH,qDAKhBG,KACC,CAACP,EAAMM,OAAOlF,KAEjB,IAAIoF,EAAO,cAAC,EAAD,CAAM5C,MAAOqC,EAAWH,QAYnC,OAXKK,EAEOF,EAAWL,aACrBY,EACE,cAACzF,EAAA,EAAD,CAAWC,MAAO,CAAEyF,UAAW,UAA/B,SACE,mBAAGxF,UAAU,cAAb,+DAJJuF,EAAO,cAAC,EAAD,IAWP,gCACE,cAAC,EAAD,CAAKxF,MAAO,CAAEmB,IAAK,MAAOuE,UAAW,UACpCF,M,QCAQG,EAhCD,WACZ,OACE,cAAC5F,EAAA,EAAD,UACE,eAAC6F,EAAA,EAAD,WACE,uCACA,i5BAeA,mBACEC,IAAI,aACJpF,OAAO,SACPG,KAAK,mCAHP,SAKE,cAAC,IAAD,CAAcE,KAAM,GAAId,MAAO,CAAE8F,MAAO,kB,gCCmF5CxE,G,MAAa,SAACC,GAClBC,aAAaC,YAAcF,EAC3BG,SAASC,eAAe,cAAcC,YAAcL,IAGhDwE,EAAa,SAACpG,GAAW,IAAD,EACJC,mBAAS,GADL,mBACvBwC,EADuB,KAChB4D,EADgB,KAEtBpD,EAAuBjD,EAAvBiD,MAAOG,EAAgBpD,EAAhBoD,YAUb,OARAsC,qBAAU,WACRW,EACEvB,OAAOD,KAAKzB,GACTI,KAAI,SAAC/C,GAAD,OAAQ4C,SAASD,EAAY3C,IAAO4C,SAASJ,EAAMxC,GAAIgC,UAC3D6D,QAAO,SAAC/B,EAAGgC,GAAJ,OAAUhC,EAAIgC,IAAG,MAE5B,CAACnD,EAAaX,EAAOQ,EAAOoD,IAExB,eAACG,EAAA,EAAD,CAAOtF,QAAQ,OAAf,iCAA2CuB,EAA3C,WAGMgE,EArHE,WAAO,IAAD,EACGxG,mBAAS,IADZ,mBAChBgD,EADgB,KACTyD,EADS,OAEczG,mBAAS,IAFvB,mBAEhBmD,EAFgB,KAEHuD,EAFG,OAGW1G,oBAAS,GAHpB,mBAGhBuF,EAHgB,KAGLC,EAHK,KAKrBC,qBAAU,WACR,sBAAC,sBAAAnB,EAAA,sEACOmC,EAASxD,KAAKC,MAAMtB,aAAaoB,QADxC,uBAEO0D,EAAczD,KAAKC,MAAMtB,aAAauB,cAF7C,OAGCqC,GAAa,GAHd,0CAAD,KAKC,IAEH,IAAM7E,EAAQ,uCAAG,WAAOC,EAAGJ,GAAV,SAAA8D,EAAA,sDACf1D,EAAE+F,iBAEFnB,GAAa,GAHE,+BAAAlB,EAAA,MAII,WAAO3C,EAAKnB,GAAZ,iBAAA8D,EAAA,yDACbsC,EAAa3D,KAAKC,MAAMtB,aAAaoB,OACrC6D,EAAmB5D,KAAKC,MAAMtB,aAAauB,aAE/CzB,EACE0B,SAASxB,aAAaC,aAAeF,EAAMkF,EAAiBrG,IAE9DqG,EAAiBrG,GAAMmB,EAElBkF,EAAiBrG,GATL,+BAURqG,EAAiBrG,UACjBoG,EAAWpG,GAXH,SAYTiG,EAASG,GAZA,OAafhF,aAAaoB,MAAQC,KAAKI,UAAUuD,GAbrB,yBAeXF,EAAcG,GAfH,QAgBjBjF,aAAauB,YAAcF,KAAKI,UAAUwD,GAE1CrB,GAAa,GAlBI,4CAJJ,uDAwBfsB,CAAW1D,SAASxC,EAAEC,OAAOkG,IAAIjG,OAAQN,GAxB1B,2CAAH,wDA0Bd,OAAK+E,EAGAnC,SAASxB,aAAaC,aASzB,eAAC1B,EAAA,EAAD,CAAWE,UAAU,sBAArB,UACE,cAAC,EAAD,CAAY2C,MAAOA,EAAOG,YAAaA,IACtC0B,OAAOD,KAAKzB,GAAaI,KAAI,SAAC/C,GAAD,OAC5B,eAACwF,EAAA,EAAD,WACE,eAACgB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAK5G,UAAU,eAAf,SACE,cAAC6G,EAAA,EAAD,CAAOnE,WAAS,EAACc,IAAKb,EAAMxC,GAAIqC,UAElC,eAACoE,EAAA,EAAD,CAAK5G,UAAU,cAAf,UACE,oBAAIA,UAAU,OAAd,mBACA,mBAAGA,UAAU,aAAb,SAA2B2C,EAAMxC,GAAI4B,QACrC,oBAAI/B,UAAU,OAAd,oBACA,mBAAGA,UAAU,aAAb,SAA2B2C,EAAMxC,GAAI8B,SACrC,oBAAIjC,UAAU,OAAd,mBACA,mBAAGA,UAAU,aAAb,SACG+C,SAASJ,EAAMxC,GAAIgC,OAASY,SAASD,EAAY3C,YAIxD,uBAAM2G,SAAU,SAACvG,GAAD,OAAOD,EAASC,EAAGJ,IAAKH,UAAU,OAAlD,UACE,qBAAIA,UAAU,OAAd,sBACW,gCAAQ8C,EAAY3C,KAD/B,OAGA,cAACO,EAAA,EAAD,CACEL,KAAK,SACLO,QAAQ,eACRC,KAAK,KACLb,UAAU,YAJZ,kBAQA,uBACEA,UAAU,iBACVK,KAAK,SACLD,YAAa0C,EAAY3C,GACzB4G,IAAI,IACJ5G,GAAG,MACH6G,UAAQ,SAlCE7G,SAVlB,eAACL,EAAA,EAAD,CAAWE,UAAU,sBAArB,UACE,cAAC,IAAD,CAAuBa,KAAM,MAD/B,qCAJK,cAAC,EAAD,K,MC7CNU,aAAaoB,QAChBpB,aAAaoB,MAAQC,KAAKI,UAAU,IACpCzB,aAAauB,YAAcF,KAAKI,UAAU,IAC1CzB,aAAaC,YAAcoB,KAAKI,UAAU,IAG5C,IA8DeiE,EA9DA,WACb,OACE,gCACE,cAACC,EAAA,EAAD,CAAQC,kBAAgB,EAACC,OAAO,KAAKxG,QAAQ,QAAQZ,UAAU,SAA/D,SACE,eAACF,EAAA,EAAD,WACE,cAACoH,EAAA,EAAOG,MAAR,CAAc1G,KAAK,iBAAnB,SACE,8CAEF,cAACuG,EAAA,EAAOI,OAAR,CAAeC,gBAAc,0BAC7B,eAACL,EAAA,EAAOM,SAAR,CAAiBrH,GAAG,wBAApB,UACE,eAACsH,EAAA,EAAD,CAAKzH,UAAU,UAAf,UACE,cAACyH,EAAA,EAAIC,KAAL,CAAU/G,KAAK,iBAAf,kBACA,cAAC8G,EAAA,EAAIC,KAAL,CAAU/G,KAAK,sBAAf,sBAEF,eAAC8G,EAAA,EAAD,WACE,eAACE,EAAA,EAAD,CAAa5F,MAAM,QAAQ5B,GAAG,0BAA9B,UACE,cAACwH,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,wBAAvB,qBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,wBAAvB,qBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,wBAAvB,qBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,iCAAvB,gCAGA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,0BAAvB,uBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,wBAAvB,qBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,uBAAvB,oBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,yBAAvB,sBACA,cAACgH,EAAA,EAAYE,QAAb,IACA,cAACF,EAAA,EAAYC,KAAb,CAAkBjH,KAAK,gCAAvB,uBAIF,eAAC8G,EAAA,EAAIC,KAAL,CAAU/G,KAAK,qBAAf,iBAEE,cAAC,IAAD,IAA0B,IAC1B,sBAAMR,GAAG,aAAT,SACG4C,SAASxB,aAAaC,cAAgB,kBAOnD,cAAC,IAAD,CAAesG,SAAS,gBAAxB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,GAAGC,UAAWxI,IAChC,cAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,IAAIC,UAAWxI,IACjC,cAAC,IAAD,CAAOsI,OAAK,EAACC,KAAK,SAASC,UAAWvC,IACtC,cAAC,IAAD,CAAOqC,OAAK,EAACC,KAAK,QAAQC,UAAW9B,IACrC,cAAC,IAAD,CAAO6B,KAAK,OAAOC,UAAWnD,aC1DzBoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpH,SAASC,eAAe,SAM1BwG,M","file":"static/js/main.27b6655d.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { Container, Form, Button } from \"react-bootstrap\";\nimport { AiOutlineSearch } from \"react-icons/ai\";\nimport \"./style/app.css\";\n\nfunction App(props) {\n  let [search_input, setSearchInput] = useState(\"\");\n  const onChange = (e) => {\n    setSearchInput(`/book-store/#/${e.target.value}`);\n  };\n\n  return (\n    <Container style={props.style} className=\"search\">\n      <Form action={search_input}>\n        <input\n          id=\"search\"\n          placeholder=\"Title of the Book...\"\n          type=\"text\"\n          onChange={onChange}\n        />\n        <Button\n          href={search_input}\n          type=\"submit\"\n          variant=\"outline-dark\"\n          size=\"sm\"\n        >\n          <AiOutlineSearch size={26} cursor=\"Pointer\" />\n        </Button>\n      </Form>\n    </Container>\n  );\n}\n\nexport default App;\n","import { Spinner } from \"react-bootstrap\";\r\n\r\nconst Spin = () => (\r\n  <Spinner\r\n    style={{ position: \"fixed\", top: \"50%\", left: \"50%\" }}\r\n    animation=\"border\"\r\n    variant=\"dark\"\r\n  />\r\n);\r\n\r\nexport default Spin;\r\n","const cart = (book_data) => {\r\n  let add_book = {};\r\n\r\n  add_book.id = book_data.id;\r\n  add_book.title = book_data.volumeInfo.title;\r\n  add_book.author = book_data.volumeInfo.authors[0];\r\n  add_book.price =\r\n    book_data.saleInfo.listPrice.amount +\r\n    book_data.saleInfo.listPrice.currencyCode;\r\n  add_book.image = book_data.volumeInfo.imageLinks.thumbnail;\r\n\r\n  let books = JSON.parse(localStorage.books);\r\n  let books_count = JSON.parse(localStorage.books_count);\r\n\r\n  if (books_count[add_book.id]) {\r\n    books_count[add_book.id] = parseInt(books_count[add_book.id]) + 1;\r\n  } else {\r\n    books_count[add_book.id] = 1;\r\n    books[add_book.id] = add_book;\r\n  }\r\n\r\n  localStorage.books = JSON.stringify(books);\r\n  localStorage.books_count = JSON.stringify(books_count);\r\n\r\n  card_items(parseInt(localStorage.total_items) + 1);\r\n};\r\n\r\nconst card_items = (val) => {\r\n  localStorage.total_items = val;\r\n  document.getElementById(\"cart-items\").textContent = val;\r\n};\r\nexport default cart;\r\n","import { Card, Container, Button } from \"react-bootstrap\";\r\nimport cart from \"../local-storage/local-storage.js\";\r\nimport \"./styles/show.css\";\r\n\r\nconst Show = (props) => {\r\n  let { books } = props;\r\n\r\n  const onClick = (book) => {\r\n    cart(book);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"show-container\">\r\n      {books.map((book) => (\r\n        <Card\r\n          className=\"show-card\"\r\n          style={{ display: \"inline-block\" }}\r\n          key={book.id}\r\n          bg=\"light\"\r\n        >\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={book.volumeInfo.imageLinks.thumbnail}\r\n            alt=\"image not available\"\r\n            width=\"300\"\r\n            height=\"250\"\r\n          />\r\n          <Card.Body>\r\n            <Card.Title className=\"text-muted\">\r\n              Price{\" \"}\r\n              {book.saleInfo.listPrice ? book.saleInfo.listPrice.amount : 0}{\" \"}\r\n              {book.saleInfo.listPrice\r\n                ? book.saleInfo.listPrice.currencyCode\r\n                : \"INR\"}\r\n            </Card.Title>\r\n            <Button\r\n              onClick={\r\n                book.saleInfo.listPrice ? () => onClick(book) : () => null\r\n              }\r\n              variant=\"dark\"\r\n              size=\"sm\"\r\n            >\r\n              Add to Cart\r\n            </Button>\r\n          </Card.Body>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Show;\r\n","const getBooksData = async (search) => {\r\n  search = search.replace(/ /g, \"+\");\r\n  let response = await fetch(\r\n    `https://www.googleapis.com/books/v1/volumes?q=${search}&filter=paid-ebooks&maxResults=10`,\r\n    { mode: \"cors\" }\r\n  );\r\n  response = await response.json();\r\n\r\n  let keys = Object.keys(response[\"items\"]);\r\n  keys = keys.filter((key) => response[\"items\"][key].volumeInfo.imageLinks);\r\n  response = {\r\n    totalItems: keys.length,\r\n    items: keys.map((key) => response[\"items\"][key]),\r\n  };\r\n  return response;\r\n};\r\n\r\nexport default getBooksData;\r\n","import Spinner from \"./spinner.js\";\r\nimport Show from \"./show.js\";\r\nimport App from \"../app.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport getBooksData from \"../books-api/books-api.js\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nconst Search = ({ match }) => {\r\n  let [books_data, setBooksData] = useState({});\r\n  let [isFetched, setIsFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const updateData = async () => {\r\n      let books_data = await getBooksData(match.params.id);\r\n      await setBooksData(books_data);\r\n      setIsFetched(true);\r\n    };\r\n    updateData();\r\n  }, [match.params.id]);\r\n\r\n  let temp = <Show books={books_data.items} />;\r\n  if (!isFetched) {\r\n    temp = <Spinner />;\r\n  } else if (!books_data.totalItems) {\r\n    temp = (\r\n      <Container style={{ textAlign: \"center\" }}>\r\n        <p className=\"text-danger\">\r\n          No book found. Please enter the correct title.\r\n        </p>\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <div>\r\n      <App style={{ top: \"15%\", marginTop: \"5rem\" }} />\r\n      {temp}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import { AiFillGithub } from \"react-icons/ai\";\r\nimport { Container, Jumbotron } from \"react-bootstrap\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <Container>\r\n      <Jumbotron>\r\n        <h1>About</h1>\r\n        <p>\r\n          This is a simple hero unit, a simple jumbotron-style component for\r\n          calling extra attention to featured content or information. Lorem\r\n          ipsum dolor sit amet consectetur adipisicing elit. Porro fugiat magni\r\n          facilis. Facilis, consequatur nisi molestias cupiditate sapiente\r\n          labore officiis illo suscipit at nesciunt omnis doloribus mollitia\r\n          neque porro earum ab numquam laudantium laboriosam itaque iure atque,\r\n          beatae animi sequi. Architecto voluptatum impedit, molestias ipsam\r\n          eius modi non aut optio, cumque quasi maxime? Iste, necessitatibus sed\r\n          voluptatem nam at consequuntur ipsum et maxime corrupti animi eaque\r\n          aliquam minima reiciendis unde consectetur tempore velit, debitis\r\n          rerum ab sunt nihil nobis accusantium? Temporibus architecto nesciunt\r\n          explicabo laboriosam vel exercitationem ut animi illum laborum\r\n          corporis assumenda iusto consequuntur cumque, atque quibusdam quod ad!\r\n        </p>\r\n        <a\r\n          rel=\"noreferrer\"\r\n          target=\"_blank\"\r\n          href=\"https://www.github.com/coder1033\"\r\n        >\r\n          <AiFillGithub size={50} style={{ color: \"#111\" }} />\r\n        </a>\r\n      </Jumbotron>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport Spinner from \"./spinner.js\";\r\nimport { useState, useEffect } from \"react\";\r\nimport {\r\n  Alert,\r\n  Row,\r\n  Col,\r\n  Image,\r\n  Container,\r\n  Jumbotron,\r\n  Button,\r\n} from \"react-bootstrap\";\r\nimport \"./styles/show-cart.css\";\r\n\r\nconst ShowCart = () => {\r\n  let [books, setBooks] = useState({});\r\n  let [books_count, setBooksCount] = useState({});\r\n  let [isFetched, setIsFetched] = useState(false);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await setBooks(JSON.parse(localStorage.books));\r\n      await setBooksCount(JSON.parse(localStorage.books_count));\r\n      setIsFetched(true);\r\n    })();\r\n  }, []);\r\n\r\n  const onChange = async (e, id) => {\r\n    e.preventDefault();\r\n\r\n    setIsFetched(false);\r\n    const updateCart = async (val, id) => {\r\n      let temp_books = JSON.parse(localStorage.books);\r\n      let temp_books_count = JSON.parse(localStorage.books_count);\r\n\r\n      card_items(\r\n        parseInt(localStorage.total_items) + val - temp_books_count[id]\r\n      );\r\n      temp_books_count[id] = val;\r\n\r\n      if (!temp_books_count[id]) {\r\n        delete temp_books_count[id];\r\n        delete temp_books[id];\r\n        await setBooks(temp_books);\r\n        localStorage.books = JSON.stringify(temp_books);\r\n      }\r\n      await setBooksCount(temp_books_count);\r\n      localStorage.books_count = JSON.stringify(temp_books_count);\r\n\r\n      setIsFetched(true);\r\n    };\r\n    updateCart(parseInt(e.target.qty.value), id);\r\n  };\r\n  if (!isFetched) {\r\n    return <Spinner />;\r\n  }\r\n  if (!parseInt(localStorage.total_items)) {\r\n    return (\r\n      <Container className=\"show-cart-container\">\r\n        <AiOutlineShoppingCart size={200} />\r\n        There's nothing in your cart...\r\n      </Container>\r\n    );\r\n  }\r\n  return (\r\n    <Container className=\"show-cart-container\">\r\n      <TotalPrice books={books} books_count={books_count} />\r\n      {Object.keys(books_count).map((id) => (\r\n        <Jumbotron key={id}>\r\n          <Row>\r\n            <Col className=\"first-column\">\r\n              <Image thumbnail src={books[id].image} />\r\n            </Col>\r\n            <Col className=\"last-column\">\r\n              <h3 className=\"mb-0\">Title</h3>\r\n              <p className=\"text-muted\">{books[id].title}</p>\r\n              <h3 className=\"mb-0\">Author</h3>\r\n              <p className=\"text-muted\">{books[id].author}</p>\r\n              <h3 className=\"mb-0\">Price</h3>\r\n              <p className=\"text-muted\">\r\n                {parseInt(books[id].price) * parseInt(books_count[id])}\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n          <form onSubmit={(e) => onChange(e, id)} className=\"mt-3\">\r\n            <h5 className=\"mb-1\">\r\n              Quantity(<small>{books_count[id]}</small>)\r\n            </h5>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"outline-dark\"\r\n              size=\"sm\"\r\n              className=\"py-0 px-1\"\r\n            >\r\n              save\r\n            </Button>\r\n            <input\r\n              className=\"input-quantity\"\r\n              type=\"number\"\r\n              placeholder={books_count[id]}\r\n              min=\"0\"\r\n              id=\"qty\"\r\n              required\r\n            />\r\n          </form>\r\n        </Jumbotron>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst card_items = (val) => {\r\n  localStorage.total_items = val;\r\n  document.getElementById(\"cart-items\").textContent = val;\r\n};\r\n\r\nconst TotalPrice = (props) => {\r\n  let [price, setPrice] = useState(0);\r\n  let { books, books_count } = props;\r\n\r\n  useEffect(() => {\r\n    setPrice(\r\n      Object.keys(books_count)\r\n        .map((id) => parseInt(books_count[id]) * parseInt(books[id].price))\r\n        .reduce((a, b) => a + b, 0)\r\n    );\r\n  }, [books_count, price, books, setPrice]);\r\n\r\n  return <Alert variant=\"info\">Your Grand Total is {price} INR</Alert>;\r\n};\r\n\r\nexport default ShowCart;\r\n","import { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport { Navbar, Nav, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { AiOutlineShoppingCart } from \"react-icons/ai\";\r\nimport App from \"./app\";\r\nimport Search from \"./components/search.js\";\r\nimport About from \"./components/about.js\";\r\nimport ShowCart from \"./components/show-cart.js\";\r\nimport \"./style/routes.css\";\r\n\r\nif (!localStorage.books) {\r\n  localStorage.books = JSON.stringify({});\r\n  localStorage.books_count = JSON.stringify({});\r\n  localStorage.total_items = JSON.stringify(0);\r\n}\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <div>\r\n      <Navbar collapseOnSelect expand=\"sm\" variant=\"light\" className=\"navbar\">\r\n        <Container>\r\n          <Navbar.Brand href=\"/book-store/#/\">\r\n            <h1>Book Store</h1>\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"/book-store/#/\">Home</Nav.Link>\r\n              <Nav.Link href=\"/book-store/#/about\">About</Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              <NavDropdown title=\"Genre\" id=\"collasible-nav-dropdown\">\r\n                <NavDropdown.Item href=\"/book-store/#/fiction\">Fiction</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/mystery\">Mystery</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/fantasy\">Fantasy</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/action+adventure\">\r\n                  Action & Adventure\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/biography\">Biography</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/romance\">Romance</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/horror\">Horror</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/classics\">Classics</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item href=\"/book-store/#/science-fiction\">\r\n                  Sci-fi\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n              <Nav.Link href=\"/book-store/#/cart\">\r\n                Cart\r\n                <AiOutlineShoppingCart />{\" \"}\r\n                <span id=\"cart-items\">\r\n                  {parseInt(localStorage.total_items) || 0}\r\n                </span>\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      <BrowserRouter basename=\"book-store/#/\">\r\n        <Switch>\r\n          <Route exact path=\"\" component={App} />\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/about\" component={About} />\r\n          <Route exact path=\"/cart\" component={ShowCart} />\r\n          <Route path=\"/:id\" component={Search} />\r\n        </Switch>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/index.css\";\nimport Routes from \"./routes.js\";\nimport reportWebVitals from \"./report-web-vitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}